Priority of improvements (my ranking)
  - B007-A
  - B007
  - B008
  - B005
  - B002
  - B004
  - B003
  - B001  // updates as needed


List of Improvements

(B001) Basic main view with camera control --> MainView.tsx

(B002) Integration of Sketcher tool 
    - create new sketch                 // done
    - update existing one -> set active one to the selected sketch and open Sketcher tool
    - navigation between Sketcher and 3dMod tools

(B003) List with sketches and geometries

(B004) Datamodel update sketchSlice.ts --> Document with sketches and geometry

(B005) Mapping of sketches to 3D View (and basic workflow)
    - All closed lines should be interpreted as faces
    - On each face (or multiple) an Extrude is possible to create a 3D object
    --> see B007

(B007) Display Sketch in 3D View
    - All closed surfaces shall be individually selectable --> to apply an operation (like extrude)
    - Workflow: 
       1) Create Sketch
       2) Go back to 3D Modeller and Sketch is displayed
       3) Select one/ multiple faces an apply operation (e.g. Extrude --> give a length)
           e.g. right click on single Face (multiple Face selection) -> Extrude
       4) 3D Body is created
    - A history of these operations shall be stored (e.g. also to go back and forth in time)
(B007-A) Improve the visualization
    - Different Sketches should be highlighed differently
    - Improve colors, highlighting etc. of displayed Sketches
    - Add visualization of circles
    - Show/ Hide of sketches displayed (future topic)
    - Need a way to find out if lines are connected at all, lines describe multiple faces etc.?
      E.g. get all Faces from given lines and circles --> e.g. these could be used for an extrude
    - How does the current implementation handle multiple overlapping objects in one Sketch,
      e.g. two rectangles?
      - It currently only supports a single closed line segment (of any shape)
      - If it is not closed --> Error (should be the case, however the error should 
          be detected before calling combineEdgesAndWiresIntoAWire occt function)
      - If it has more than one closed line segments --> Error:
        Uncaught (in promise) OCCT computation failed. Error: Wire is disconnected and can not be
        constructed While executing function - shapes.wire.combineEdgesAndWiresIntoAWire. 
        Input values were: ...
      --> so current implementation using combineEdgesAndWiresIntoAWire() only supports a 
          single connected line segment

(B008) Add attachment to Sketches, e.g. where they are located in 3D space
    - For a sketch also the Plane should be selectable (X, Y, or Z)
    - Additionally offsets in all directions are needed (per default it is located at [0,0,0])


Done Improvements

(B006) Integration of opencascade.js / @bitbybit-dev/occt-worker
    - Currently there are massive performance issues with initOpenCascade() function (to be tested on different machines)
    - Also when switching to the Sketcher View immediately performance is still impacted
       - in this case need to find a way to stop initOpenCascade() function
    - Docu says that "You can then host this asset using infinite caching duration headers"
       https://ocjs.org/docs/getting-started/configure-bundler
       - How to do that?
    - Check out if one of these should be used instead: 
       https://www.npmjs.com/package/@bitbybit-dev/occt-worker      // --> go for this since it is for the browser (uses a web worker)
       https://www.npmjs.com/package/@bitbybit-dev/occt
